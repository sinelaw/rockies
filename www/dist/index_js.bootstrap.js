"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcreate_wasm_app"] = self["webpackChunkcreate_wasm_app"] || []).push([["index_js"],{

/***/ "../pkg/rockies.js":
/*!*************************!*\
  !*** ../pkg/rockies.js ***!
  \*************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Game: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.Game),\n/* harmony export */   GridIndex: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.GridIndex),\n/* harmony export */   Stats: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.Stats),\n/* harmony export */   V2i: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.V2i),\n/* harmony export */   __wbg_String_eecc4a11987127d6: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_String_eecc4a11987127d6),\n/* harmony export */   __wbg_buffer_609cc3eee51ed158: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_buffer_609cc3eee51ed158),\n/* harmony export */   __wbg_call_672a4d21634d4a24: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_call_672a4d21634d4a24),\n/* harmony export */   __wbg_done_769e5ede4b31c67b: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_done_769e5ede4b31c67b),\n/* harmony export */   __wbg_error_7534b8e9a36f1ab4: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_error_7534b8e9a36f1ab4),\n/* harmony export */   __wbg_getTime_46267b1c24877e30: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_getTime_46267b1c24877e30),\n/* harmony export */   __wbg_get_67b2ba62fc30de12: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_67b2ba62fc30de12),\n/* harmony export */   __wbg_get_b9b93047fe3cf45b: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_b9b93047fe3cf45b),\n/* harmony export */   __wbg_getwithrefkey_6550b2c093d2eb18: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_getwithrefkey_6550b2c093d2eb18),\n/* harmony export */   __wbg_gridindex_new: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_gridindex_new),\n/* harmony export */   __wbg_instanceof_ArrayBuffer_e14585432e3737fc: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_instanceof_ArrayBuffer_e14585432e3737fc),\n/* harmony export */   __wbg_instanceof_Uint8Array_17156bcf118086a9: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_instanceof_Uint8Array_17156bcf118086a9),\n/* harmony export */   __wbg_isArray_a1eab7e0d067391b: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_isArray_a1eab7e0d067391b),\n/* harmony export */   __wbg_isSafeInteger_343e2beeeece1bb0: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_isSafeInteger_343e2beeeece1bb0),\n/* harmony export */   __wbg_iterator_9a24c88df860dc65: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_iterator_9a24c88df860dc65),\n/* harmony export */   __wbg_length_a446193dc22c12f8: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_length_a446193dc22c12f8),\n/* harmony export */   __wbg_length_e2d2a49132c1b256: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_length_e2d2a49132c1b256),\n/* harmony export */   __wbg_log_c222819a41e063d3: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_log_c222819a41e063d3),\n/* harmony export */   __wbg_new0_f788a2397c7ca929: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new0_f788a2397c7ca929),\n/* harmony export */   __wbg_new_405e22f390576ce2: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_405e22f390576ce2),\n/* harmony export */   __wbg_new_78feb108b6472713: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_78feb108b6472713),\n/* harmony export */   __wbg_new_8a6f238a6ece86ea: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_8a6f238a6ece86ea),\n/* harmony export */   __wbg_new_a12002a7f91c75be: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_new_a12002a7f91c75be),\n/* harmony export */   __wbg_next_25feadfc0913fea9: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_next_25feadfc0913fea9),\n/* harmony export */   __wbg_next_6574e1a8a62d1055: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_next_6574e1a8a62d1055),\n/* harmony export */   __wbg_set_37837023f3d740e8: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_37837023f3d740e8),\n/* harmony export */   __wbg_set_3807d5f0bfc24aa7: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_3807d5f0bfc24aa7),\n/* harmony export */   __wbg_set_65595bdd868b3009: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_65595bdd868b3009),\n/* harmony export */   __wbg_set_wasm: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm),\n/* harmony export */   __wbg_stack_0ed75d68575b0f3c: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_stack_0ed75d68575b0f3c),\n/* harmony export */   __wbg_value_cd1ffa7b1ab794f1: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_value_cd1ffa7b1ab794f1),\n/* harmony export */   __wbindgen_bigint_from_u64: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_bigint_from_u64),\n/* harmony export */   __wbindgen_bigint_get_as_i64: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_bigint_get_as_i64),\n/* harmony export */   __wbindgen_boolean_get: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_boolean_get),\n/* harmony export */   __wbindgen_debug_string: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_debug_string),\n/* harmony export */   __wbindgen_error_new: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_error_new),\n/* harmony export */   __wbindgen_in: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_in),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_is_bigint: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_bigint),\n/* harmony export */   __wbindgen_is_function: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_function),\n/* harmony export */   __wbindgen_is_object: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_object),\n/* harmony export */   __wbindgen_is_undefined: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_is_undefined),\n/* harmony export */   __wbindgen_jsval_eq: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_jsval_eq),\n/* harmony export */   __wbindgen_jsval_loose_eq: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_jsval_loose_eq),\n/* harmony export */   __wbindgen_memory: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_memory),\n/* harmony export */   __wbindgen_number_get: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_number_get),\n/* harmony export */   __wbindgen_number_new: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_number_new),\n/* harmony export */   __wbindgen_string_get: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_string_get),\n/* harmony export */   __wbindgen_string_new: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_string_new),\n/* harmony export */   __wbindgen_throw: () => (/* reexport safe */ _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw)\n/* harmony export */ });\n/* harmony import */ var _rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rockies_bg.wasm */ \"../pkg/rockies_bg.wasm\");\n/* harmony import */ var _rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rockies_bg.js */ \"../pkg/rockies_bg.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n(0,_rockies_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm)(_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__);\n_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.__wbindgen_start();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/../pkg/rockies.js?");

/***/ }),

/***/ "../pkg/rockies_bg.js":
/*!****************************!*\
  !*** ../pkg/rockies_bg.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Game: () => (/* binding */ Game),\n/* harmony export */   GridIndex: () => (/* binding */ GridIndex),\n/* harmony export */   Stats: () => (/* binding */ Stats),\n/* harmony export */   V2i: () => (/* binding */ V2i),\n/* harmony export */   __wbg_String_eecc4a11987127d6: () => (/* binding */ __wbg_String_eecc4a11987127d6),\n/* harmony export */   __wbg_buffer_609cc3eee51ed158: () => (/* binding */ __wbg_buffer_609cc3eee51ed158),\n/* harmony export */   __wbg_call_672a4d21634d4a24: () => (/* binding */ __wbg_call_672a4d21634d4a24),\n/* harmony export */   __wbg_done_769e5ede4b31c67b: () => (/* binding */ __wbg_done_769e5ede4b31c67b),\n/* harmony export */   __wbg_error_7534b8e9a36f1ab4: () => (/* binding */ __wbg_error_7534b8e9a36f1ab4),\n/* harmony export */   __wbg_getTime_46267b1c24877e30: () => (/* binding */ __wbg_getTime_46267b1c24877e30),\n/* harmony export */   __wbg_get_67b2ba62fc30de12: () => (/* binding */ __wbg_get_67b2ba62fc30de12),\n/* harmony export */   __wbg_get_b9b93047fe3cf45b: () => (/* binding */ __wbg_get_b9b93047fe3cf45b),\n/* harmony export */   __wbg_getwithrefkey_6550b2c093d2eb18: () => (/* binding */ __wbg_getwithrefkey_6550b2c093d2eb18),\n/* harmony export */   __wbg_gridindex_new: () => (/* binding */ __wbg_gridindex_new),\n/* harmony export */   __wbg_instanceof_ArrayBuffer_e14585432e3737fc: () => (/* binding */ __wbg_instanceof_ArrayBuffer_e14585432e3737fc),\n/* harmony export */   __wbg_instanceof_Uint8Array_17156bcf118086a9: () => (/* binding */ __wbg_instanceof_Uint8Array_17156bcf118086a9),\n/* harmony export */   __wbg_isArray_a1eab7e0d067391b: () => (/* binding */ __wbg_isArray_a1eab7e0d067391b),\n/* harmony export */   __wbg_isSafeInteger_343e2beeeece1bb0: () => (/* binding */ __wbg_isSafeInteger_343e2beeeece1bb0),\n/* harmony export */   __wbg_iterator_9a24c88df860dc65: () => (/* binding */ __wbg_iterator_9a24c88df860dc65),\n/* harmony export */   __wbg_length_a446193dc22c12f8: () => (/* binding */ __wbg_length_a446193dc22c12f8),\n/* harmony export */   __wbg_length_e2d2a49132c1b256: () => (/* binding */ __wbg_length_e2d2a49132c1b256),\n/* harmony export */   __wbg_log_c222819a41e063d3: () => (/* binding */ __wbg_log_c222819a41e063d3),\n/* harmony export */   __wbg_new0_f788a2397c7ca929: () => (/* binding */ __wbg_new0_f788a2397c7ca929),\n/* harmony export */   __wbg_new_405e22f390576ce2: () => (/* binding */ __wbg_new_405e22f390576ce2),\n/* harmony export */   __wbg_new_78feb108b6472713: () => (/* binding */ __wbg_new_78feb108b6472713),\n/* harmony export */   __wbg_new_8a6f238a6ece86ea: () => (/* binding */ __wbg_new_8a6f238a6ece86ea),\n/* harmony export */   __wbg_new_a12002a7f91c75be: () => (/* binding */ __wbg_new_a12002a7f91c75be),\n/* harmony export */   __wbg_next_25feadfc0913fea9: () => (/* binding */ __wbg_next_25feadfc0913fea9),\n/* harmony export */   __wbg_next_6574e1a8a62d1055: () => (/* binding */ __wbg_next_6574e1a8a62d1055),\n/* harmony export */   __wbg_set_37837023f3d740e8: () => (/* binding */ __wbg_set_37837023f3d740e8),\n/* harmony export */   __wbg_set_3807d5f0bfc24aa7: () => (/* binding */ __wbg_set_3807d5f0bfc24aa7),\n/* harmony export */   __wbg_set_65595bdd868b3009: () => (/* binding */ __wbg_set_65595bdd868b3009),\n/* harmony export */   __wbg_set_wasm: () => (/* binding */ __wbg_set_wasm),\n/* harmony export */   __wbg_stack_0ed75d68575b0f3c: () => (/* binding */ __wbg_stack_0ed75d68575b0f3c),\n/* harmony export */   __wbg_value_cd1ffa7b1ab794f1: () => (/* binding */ __wbg_value_cd1ffa7b1ab794f1),\n/* harmony export */   __wbindgen_bigint_from_u64: () => (/* binding */ __wbindgen_bigint_from_u64),\n/* harmony export */   __wbindgen_bigint_get_as_i64: () => (/* binding */ __wbindgen_bigint_get_as_i64),\n/* harmony export */   __wbindgen_boolean_get: () => (/* binding */ __wbindgen_boolean_get),\n/* harmony export */   __wbindgen_debug_string: () => (/* binding */ __wbindgen_debug_string),\n/* harmony export */   __wbindgen_error_new: () => (/* binding */ __wbindgen_error_new),\n/* harmony export */   __wbindgen_in: () => (/* binding */ __wbindgen_in),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* binding */ __wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_is_bigint: () => (/* binding */ __wbindgen_is_bigint),\n/* harmony export */   __wbindgen_is_function: () => (/* binding */ __wbindgen_is_function),\n/* harmony export */   __wbindgen_is_object: () => (/* binding */ __wbindgen_is_object),\n/* harmony export */   __wbindgen_is_undefined: () => (/* binding */ __wbindgen_is_undefined),\n/* harmony export */   __wbindgen_jsval_eq: () => (/* binding */ __wbindgen_jsval_eq),\n/* harmony export */   __wbindgen_jsval_loose_eq: () => (/* binding */ __wbindgen_jsval_loose_eq),\n/* harmony export */   __wbindgen_memory: () => (/* binding */ __wbindgen_memory),\n/* harmony export */   __wbindgen_number_get: () => (/* binding */ __wbindgen_number_get),\n/* harmony export */   __wbindgen_number_new: () => (/* binding */ __wbindgen_number_new),\n/* harmony export */   __wbindgen_string_get: () => (/* binding */ __wbindgen_string_get),\n/* harmony export */   __wbindgen_string_new: () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   __wbindgen_throw: () => (/* binding */ __wbindgen_throw)\n/* harmony export */ });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (typeof(arg) !== 'string') throw new Error(`expected a string argument, found ${typeof(arg)}`);\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read !== arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction logError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_4.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nfunction _assertBoolean(n) {\n    if (typeof(n) !== 'boolean') {\n        throw new Error(`expected a boolean argument, found ${typeof(n)}`);\n    }\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error(`expected a number argument, found ${typeof(n)}`);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction _assertBigInt(n) {\n    if (typeof(n) !== 'bigint') throw new Error(`expected a bigint argument, found ${typeof(n)}`);\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    const mem = getDataViewMemory0();\n    const result = [];\n    for (let i = ptr; i < ptr + 4 * len; i += 4) {\n        result.push(wasm.__wbindgen_export_4.get(mem.getUint32(i, true)));\n    }\n    wasm.__externref_drop_slice(ptr, len);\n    return result;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_4.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n\nconst GameFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_game_free(ptr >>> 0, 1));\n\nclass Game {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Game.prototype);\n        obj.__wbg_ptr = ptr;\n        GameFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        GameFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_game_free(ptr, 0);\n    }\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @returns {Game}\n     */\n    static new(width, height) {\n        _assertNum(width);\n        _assertNum(height);\n        const ret = wasm.game_new(width, height);\n        return Game.__wrap(ret);\n    }\n    /**\n     * @returns {number}\n     */\n    pixels() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.game_pixels(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {string}\n     */\n    version() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n            _assertNum(this.__wbg_ptr);\n            const ret = wasm.game_version(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    tick() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        wasm.game_tick(this.__wbg_ptr);\n    }\n    /**\n     * @returns {GridIndex[]}\n     */\n    get_grids_to_load() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.game_get_grids_to_load(this.__wbg_ptr);\n        var v1 = getArrayJsValueFromWasm0(ret[0], ret[1]).slice();\n        wasm.__wbindgen_free(ret[0], ret[1] * 4, 4);\n        return v1;\n    }\n    /**\n     * @returns {GridIndex[]}\n     */\n    get_grids_to_save() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.game_get_grids_to_save(this.__wbg_ptr);\n        var v1 = getArrayJsValueFromWasm0(ret[0], ret[1]).slice();\n        wasm.__wbindgen_free(ret[0], ret[1] * 4, 4);\n        return v1;\n    }\n    /**\n     * @param {GridIndex} grid_index\n     * @param {any} bytes\n     */\n    load_grid(grid_index, bytes) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertClass(grid_index, GridIndex);\n        if (grid_index.__wbg_ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        wasm.game_load_grid(this.__wbg_ptr, grid_index.__wbg_ptr, bytes);\n    }\n    /**\n     * @param {GridIndex} grid_index\n     */\n    generate_grid(grid_index) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertClass(grid_index, GridIndex);\n        if (grid_index.__wbg_ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        wasm.game_generate_grid(this.__wbg_ptr, grid_index.__wbg_ptr);\n    }\n    /**\n     * @param {GridIndex} grid_index\n     * @returns {any}\n     */\n    save_grid(grid_index) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertClass(grid_index, GridIndex);\n        if (grid_index.__wbg_ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const ret = wasm.game_save_grid(this.__wbg_ptr, grid_index.__wbg_ptr);\n        return ret;\n    }\n    render() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        wasm.game_render(this.__wbg_ptr);\n    }\n    /**\n     * @param {string} key\n     */\n    key_down(key) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.game_key_down(this.__wbg_ptr, ptr0, len0);\n    }\n    /**\n     * @param {string} key\n     */\n    key_up(key) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.game_key_up(this.__wbg_ptr, ptr0, len0);\n    }\n    unfocus() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        wasm.game_unfocus(this.__wbg_ptr);\n    }\n    process_keys() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        wasm.game_process_keys(this.__wbg_ptr);\n    }\n    /**\n     * @param {number} x\n     * @param {number} y\n     */\n    click(x, y) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertNum(x);\n        _assertNum(y);\n        wasm.game_click(this.__wbg_ptr, x, y);\n    }\n    /**\n     * @returns {number}\n     */\n    width() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.game_width(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    height() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.game_height(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {Stats}\n     */\n    stats() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.game_stats(this.__wbg_ptr);\n        return Stats.__wrap(ret);\n    }\n}\n\nconst GridIndexFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_gridindex_free(ptr >>> 0, 1));\n\nclass GridIndex {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GridIndex.prototype);\n        obj.__wbg_ptr = ptr;\n        GridIndexFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        GridIndexFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_gridindex_free(ptr, 0);\n    }\n    /**\n     * @returns {V2i}\n     */\n    get grid_offset() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.__wbg_get_gridindex_grid_offset(this.__wbg_ptr);\n        return V2i.__wrap(ret);\n    }\n    /**\n     * @param {V2i} arg0\n     */\n    set grid_offset(arg0) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertClass(arg0, V2i);\n        if (arg0.__wbg_ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = arg0.__destroy_into_raw();\n        wasm.__wbg_set_gridindex_grid_offset(this.__wbg_ptr, ptr0);\n    }\n    /**\n     * @param {V2i} pos\n     * @param {number} width\n     * @param {number} height\n     * @returns {GridIndex}\n     */\n    static from_pos(pos, width, height) {\n        _assertClass(pos, V2i);\n        if (pos.__wbg_ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = pos.__destroy_into_raw();\n        _assertNum(width);\n        _assertNum(height);\n        const ret = wasm.gridindex_from_pos(ptr0, width, height);\n        return GridIndex.__wrap(ret);\n    }\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @returns {V2i}\n     */\n    to_pos(width, height) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertNum(width);\n        _assertNum(height);\n        const ret = wasm.gridindex_to_pos(this.__wbg_ptr, width, height);\n        return V2i.__wrap(ret);\n    }\n    /**\n     * @returns {any}\n     */\n    to_js() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.gridindex_to_js(this.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n}\n\nconst StatsFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_stats_free(ptr >>> 0, 1));\n\nclass Stats {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Stats.prototype);\n        obj.__wbg_ptr = ptr;\n        StatsFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        StatsFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_stats_free(ptr, 0);\n    }\n    /**\n     * @returns {Stats}\n     */\n    get_and_reset() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.stats_get_and_reset(this.__wbg_ptr);\n        return Stats.__wrap(ret);\n    }\n    /**\n     * @returns {Stats}\n     */\n    static zero() {\n        const ret = wasm.stats_zero();\n        return Stats.__wrap(ret);\n    }\n    /**\n     * @returns {number}\n     */\n    ticks() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.stats_ticks(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    cells_count() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.stats_cells_count(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    collisions_count() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.stats_collisions_count(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    collision_pairs_tested() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.stats_collision_pairs_tested(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n\nconst V2iFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_v2i_free(ptr >>> 0, 1));\n\nclass V2i {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(V2i.prototype);\n        obj.__wbg_ptr = ptr;\n        V2iFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        V2iFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_v2i_free(ptr, 0);\n    }\n    /**\n     * @returns {number}\n     */\n    get x() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.__wbg_get_v2i_x(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {number} arg0\n     */\n    set x(arg0) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertNum(arg0);\n        wasm.__wbg_set_v2i_x(this.__wbg_ptr, arg0);\n    }\n    /**\n     * @returns {number}\n     */\n    get y() {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        const ret = wasm.__wbg_get_v2i_y(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n     * @param {number} arg0\n     */\n    set y(arg0) {\n        if (this.__wbg_ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.__wbg_ptr);\n        _assertNum(arg0);\n        wasm.__wbg_set_v2i_y(this.__wbg_ptr, arg0);\n    }\n}\n\nfunction __wbg_String_eecc4a11987127d6() { return logError(function (arg0, arg1) {\n    const ret = String(arg1);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n}, arguments) };\n\nfunction __wbg_buffer_609cc3eee51ed158() { return logError(function (arg0) {\n    const ret = arg0.buffer;\n    return ret;\n}, arguments) };\n\nfunction __wbg_call_672a4d21634d4a24() { return handleError(function (arg0, arg1) {\n    const ret = arg0.call(arg1);\n    return ret;\n}, arguments) };\n\nfunction __wbg_done_769e5ede4b31c67b() { return logError(function (arg0) {\n    const ret = arg0.done;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nfunction __wbg_error_7534b8e9a36f1ab4() { return logError(function (arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n    }\n}, arguments) };\n\nfunction __wbg_getTime_46267b1c24877e30() { return logError(function (arg0) {\n    const ret = arg0.getTime();\n    return ret;\n}, arguments) };\n\nfunction __wbg_get_67b2ba62fc30de12() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.get(arg0, arg1);\n    return ret;\n}, arguments) };\n\nfunction __wbg_get_b9b93047fe3cf45b() { return logError(function (arg0, arg1) {\n    const ret = arg0[arg1 >>> 0];\n    return ret;\n}, arguments) };\n\nfunction __wbg_getwithrefkey_6550b2c093d2eb18() { return logError(function (arg0, arg1) {\n    const ret = arg0[arg1];\n    return ret;\n}, arguments) };\n\nfunction __wbg_gridindex_new() { return logError(function (arg0) {\n    const ret = GridIndex.__wrap(arg0);\n    return ret;\n}, arguments) };\n\nfunction __wbg_instanceof_ArrayBuffer_e14585432e3737fc() { return logError(function (arg0) {\n    let result;\n    try {\n        result = arg0 instanceof ArrayBuffer;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nfunction __wbg_instanceof_Uint8Array_17156bcf118086a9() { return logError(function (arg0) {\n    let result;\n    try {\n        result = arg0 instanceof Uint8Array;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nfunction __wbg_isArray_a1eab7e0d067391b() { return logError(function (arg0) {\n    const ret = Array.isArray(arg0);\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nfunction __wbg_isSafeInteger_343e2beeeece1bb0() { return logError(function (arg0) {\n    const ret = Number.isSafeInteger(arg0);\n    _assertBoolean(ret);\n    return ret;\n}, arguments) };\n\nfunction __wbg_iterator_9a24c88df860dc65() { return logError(function () {\n    const ret = Symbol.iterator;\n    return ret;\n}, arguments) };\n\nfunction __wbg_length_a446193dc22c12f8() { return logError(function (arg0) {\n    const ret = arg0.length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nfunction __wbg_length_e2d2a49132c1b256() { return logError(function (arg0) {\n    const ret = arg0.length;\n    _assertNum(ret);\n    return ret;\n}, arguments) };\n\nfunction __wbg_log_c222819a41e063d3() { return logError(function (arg0) {\n    console.log(arg0);\n}, arguments) };\n\nfunction __wbg_new0_f788a2397c7ca929() { return logError(function () {\n    const ret = new Date();\n    return ret;\n}, arguments) };\n\nfunction __wbg_new_405e22f390576ce2() { return logError(function () {\n    const ret = new Object();\n    return ret;\n}, arguments) };\n\nfunction __wbg_new_78feb108b6472713() { return logError(function () {\n    const ret = new Array();\n    return ret;\n}, arguments) };\n\nfunction __wbg_new_8a6f238a6ece86ea() { return logError(function () {\n    const ret = new Error();\n    return ret;\n}, arguments) };\n\nfunction __wbg_new_a12002a7f91c75be() { return logError(function (arg0) {\n    const ret = new Uint8Array(arg0);\n    return ret;\n}, arguments) };\n\nfunction __wbg_next_25feadfc0913fea9() { return logError(function (arg0) {\n    const ret = arg0.next;\n    return ret;\n}, arguments) };\n\nfunction __wbg_next_6574e1a8a62d1055() { return handleError(function (arg0) {\n    const ret = arg0.next();\n    return ret;\n}, arguments) };\n\nfunction __wbg_set_37837023f3d740e8() { return logError(function (arg0, arg1, arg2) {\n    arg0[arg1 >>> 0] = arg2;\n}, arguments) };\n\nfunction __wbg_set_3807d5f0bfc24aa7() { return logError(function (arg0, arg1, arg2) {\n    arg0[arg1] = arg2;\n}, arguments) };\n\nfunction __wbg_set_65595bdd868b3009() { return logError(function (arg0, arg1, arg2) {\n    arg0.set(arg1, arg2 >>> 0);\n}, arguments) };\n\nfunction __wbg_stack_0ed75d68575b0f3c() { return logError(function (arg0, arg1) {\n    const ret = arg1.stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n}, arguments) };\n\nfunction __wbg_value_cd1ffa7b1ab794f1() { return logError(function (arg0) {\n    const ret = arg0.value;\n    return ret;\n}, arguments) };\n\nfunction __wbindgen_bigint_from_u64(arg0) {\n    const ret = BigInt.asUintN(64, arg0);\n    return ret;\n};\n\nfunction __wbindgen_bigint_get_as_i64(arg0, arg1) {\n    const v = arg1;\n    const ret = typeof(v) === 'bigint' ? v : undefined;\n    if (!isLikeNone(ret)) {\n        _assertBigInt(ret);\n    }\n    getDataViewMemory0().setBigInt64(arg0 + 8 * 1, isLikeNone(ret) ? BigInt(0) : ret, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n};\n\nfunction __wbindgen_boolean_get(arg0) {\n    const v = arg0;\n    const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n    _assertNum(ret);\n    return ret;\n};\n\nfunction __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(arg1);\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nfunction __wbindgen_error_new(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return ret;\n};\n\nfunction __wbindgen_in(arg0, arg1) {\n    const ret = arg0 in arg1;\n    _assertBoolean(ret);\n    return ret;\n};\n\nfunction __wbindgen_init_externref_table() {\n    const table = wasm.__wbindgen_export_4;\n    const offset = table.grow(4);\n    table.set(0, undefined);\n    table.set(offset + 0, undefined);\n    table.set(offset + 1, null);\n    table.set(offset + 2, true);\n    table.set(offset + 3, false);\n    ;\n};\n\nfunction __wbindgen_is_bigint(arg0) {\n    const ret = typeof(arg0) === 'bigint';\n    _assertBoolean(ret);\n    return ret;\n};\n\nfunction __wbindgen_is_function(arg0) {\n    const ret = typeof(arg0) === 'function';\n    _assertBoolean(ret);\n    return ret;\n};\n\nfunction __wbindgen_is_object(arg0) {\n    const val = arg0;\n    const ret = typeof(val) === 'object' && val !== null;\n    _assertBoolean(ret);\n    return ret;\n};\n\nfunction __wbindgen_is_undefined(arg0) {\n    const ret = arg0 === undefined;\n    _assertBoolean(ret);\n    return ret;\n};\n\nfunction __wbindgen_jsval_eq(arg0, arg1) {\n    const ret = arg0 === arg1;\n    _assertBoolean(ret);\n    return ret;\n};\n\nfunction __wbindgen_jsval_loose_eq(arg0, arg1) {\n    const ret = arg0 == arg1;\n    _assertBoolean(ret);\n    return ret;\n};\n\nfunction __wbindgen_memory() {\n    const ret = wasm.memory;\n    return ret;\n};\n\nfunction __wbindgen_number_get(arg0, arg1) {\n    const obj = arg1;\n    const ret = typeof(obj) === 'number' ? obj : undefined;\n    if (!isLikeNone(ret)) {\n        _assertNum(ret);\n    }\n    getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n};\n\nfunction __wbindgen_number_new(arg0) {\n    const ret = arg0;\n    return ret;\n};\n\nfunction __wbindgen_string_get(arg0, arg1) {\n    const obj = arg1;\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nfunction __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return ret;\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack://create-wasm-app/../pkg/rockies_bg.js?");

/***/ }),

/***/ "../pkg/rockies_bg.wasm":
/*!******************************!*\
  !*** ../pkg/rockies_bg.wasm ***!
  \******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./rockies_bg.js */ \"../pkg/rockies_bg.js\");\nmodule.exports = __webpack_require__.v(exports, module.id, \"b8273cac2cc99c04c205\", {\n\t\"./rockies_bg.js\": {\n\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\"__wbindgen_is_bigint\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_bigint,\n\t\t\"__wbindgen_bigint_from_u64\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_bigint_from_u64,\n\t\t\"__wbindgen_jsval_eq\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_jsval_eq,\n\t\t\"__wbindgen_error_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_error_new,\n\t\t\"__wbindgen_is_object\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_object,\n\t\t\"__wbindgen_is_undefined\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_undefined,\n\t\t\"__wbindgen_in\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_in,\n\t\t\"__wbindgen_number_get\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_number_get,\n\t\t\"__wbg_gridindex_new\": WEBPACK_IMPORTED_MODULE_0.__wbg_gridindex_new,\n\t\t\"__wbindgen_number_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_number_new,\n\t\t\"__wbg_new_8a6f238a6ece86ea\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_8a6f238a6ece86ea,\n\t\t\"__wbg_stack_0ed75d68575b0f3c\": WEBPACK_IMPORTED_MODULE_0.__wbg_stack_0ed75d68575b0f3c,\n\t\t\"__wbg_error_7534b8e9a36f1ab4\": WEBPACK_IMPORTED_MODULE_0.__wbg_error_7534b8e9a36f1ab4,\n\t\t\"__wbg_log_c222819a41e063d3\": WEBPACK_IMPORTED_MODULE_0.__wbg_log_c222819a41e063d3,\n\t\t\"__wbindgen_jsval_loose_eq\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_jsval_loose_eq,\n\t\t\"__wbindgen_boolean_get\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_boolean_get,\n\t\t\"__wbindgen_string_get\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_get,\n\t\t\"__wbg_String_eecc4a11987127d6\": WEBPACK_IMPORTED_MODULE_0.__wbg_String_eecc4a11987127d6,\n\t\t\"__wbg_getwithrefkey_6550b2c093d2eb18\": WEBPACK_IMPORTED_MODULE_0.__wbg_getwithrefkey_6550b2c093d2eb18,\n\t\t\"__wbg_set_3807d5f0bfc24aa7\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_3807d5f0bfc24aa7,\n\t\t\"__wbg_get_b9b93047fe3cf45b\": WEBPACK_IMPORTED_MODULE_0.__wbg_get_b9b93047fe3cf45b,\n\t\t\"__wbg_length_e2d2a49132c1b256\": WEBPACK_IMPORTED_MODULE_0.__wbg_length_e2d2a49132c1b256,\n\t\t\"__wbg_new_78feb108b6472713\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_78feb108b6472713,\n\t\t\"__wbindgen_is_function\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_is_function,\n\t\t\"__wbg_next_25feadfc0913fea9\": WEBPACK_IMPORTED_MODULE_0.__wbg_next_25feadfc0913fea9,\n\t\t\"__wbg_next_6574e1a8a62d1055\": WEBPACK_IMPORTED_MODULE_0.__wbg_next_6574e1a8a62d1055,\n\t\t\"__wbg_done_769e5ede4b31c67b\": WEBPACK_IMPORTED_MODULE_0.__wbg_done_769e5ede4b31c67b,\n\t\t\"__wbg_value_cd1ffa7b1ab794f1\": WEBPACK_IMPORTED_MODULE_0.__wbg_value_cd1ffa7b1ab794f1,\n\t\t\"__wbg_iterator_9a24c88df860dc65\": WEBPACK_IMPORTED_MODULE_0.__wbg_iterator_9a24c88df860dc65,\n\t\t\"__wbg_get_67b2ba62fc30de12\": WEBPACK_IMPORTED_MODULE_0.__wbg_get_67b2ba62fc30de12,\n\t\t\"__wbg_call_672a4d21634d4a24\": WEBPACK_IMPORTED_MODULE_0.__wbg_call_672a4d21634d4a24,\n\t\t\"__wbg_new_405e22f390576ce2\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_405e22f390576ce2,\n\t\t\"__wbg_set_37837023f3d740e8\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_37837023f3d740e8,\n\t\t\"__wbg_isArray_a1eab7e0d067391b\": WEBPACK_IMPORTED_MODULE_0.__wbg_isArray_a1eab7e0d067391b,\n\t\t\"__wbg_instanceof_ArrayBuffer_e14585432e3737fc\": WEBPACK_IMPORTED_MODULE_0.__wbg_instanceof_ArrayBuffer_e14585432e3737fc,\n\t\t\"__wbg_isSafeInteger_343e2beeeece1bb0\": WEBPACK_IMPORTED_MODULE_0.__wbg_isSafeInteger_343e2beeeece1bb0,\n\t\t\"__wbg_getTime_46267b1c24877e30\": WEBPACK_IMPORTED_MODULE_0.__wbg_getTime_46267b1c24877e30,\n\t\t\"__wbg_new0_f788a2397c7ca929\": WEBPACK_IMPORTED_MODULE_0.__wbg_new0_f788a2397c7ca929,\n\t\t\"__wbg_buffer_609cc3eee51ed158\": WEBPACK_IMPORTED_MODULE_0.__wbg_buffer_609cc3eee51ed158,\n\t\t\"__wbg_new_a12002a7f91c75be\": WEBPACK_IMPORTED_MODULE_0.__wbg_new_a12002a7f91c75be,\n\t\t\"__wbg_set_65595bdd868b3009\": WEBPACK_IMPORTED_MODULE_0.__wbg_set_65595bdd868b3009,\n\t\t\"__wbg_length_a446193dc22c12f8\": WEBPACK_IMPORTED_MODULE_0.__wbg_length_a446193dc22c12f8,\n\t\t\"__wbg_instanceof_Uint8Array_17156bcf118086a9\": WEBPACK_IMPORTED_MODULE_0.__wbg_instanceof_Uint8Array_17156bcf118086a9,\n\t\t\"__wbindgen_bigint_get_as_i64\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_bigint_get_as_i64,\n\t\t\"__wbindgen_debug_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_debug_string,\n\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\"__wbindgen_memory\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_memory,\n\t\t\"__wbindgen_init_externref_table\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_init_externref_table\n\t}\n});\n\n//# sourceURL=webpack://create-wasm-app/../pkg/rockies_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var rockies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rockies */ \"../pkg/rockies.js\");\n/* harmony import */ var rockies_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rockies/rockies_bg.wasm */ \"../pkg/rockies_bg.wasm\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([rockies__WEBPACK_IMPORTED_MODULE_0__, rockies_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n([rockies__WEBPACK_IMPORTED_MODULE_0__, rockies_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst canvas = document.getElementById(\"the-canvas\");\n\nconst SIZE = 64;\nconst CELL_SIZE = Math.min(canvas.clientWidth / SIZE, canvas.clientHeight / SIZE) | 0; // px\n\n\nconst game = rockies__WEBPACK_IMPORTED_MODULE_0__.Game.new(SIZE, SIZE);\nconst width = game.width();\nconst height = game.height();\n\nconst ticks = document.getElementById(\"ticks\");\nconst version = document.getElementById(\"version\");\nconst cells_count = document.getElementById(\"cells-count\");\nconst collisions_count = document.getElementById(\"collisions-count\");\nconst collision_pairs_tested = document.getElementById(\"collision-pairs-tested\");\nconst touches = document.getElementById(\"touches\");\nconst dig_checkbox = document.getElementById(\"dig-checkbox\");\n\ncanvas.height = (CELL_SIZE) * height + 1;\ncanvas.width = (CELL_SIZE) * width + 1;\n\nversion.textContent = game.version();\n\nconst ctx = canvas.getContext('2d');\n\nfunction grid_index_name(grid_index) {\n    let js = grid_index.to_js();\n    return `${js.grid_offset.x}_${js.grid_offset.y}`\n}\n\n// IndexedDB helpers\nfunction openDB() {\n    return new Promise((resolve, reject) => {\n        const request = indexedDB.open('rockies-db', 1);\n        request.onupgradeneeded = function (event) {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains('grids')) {\n                db.createObjectStore('grids');\n            }\n        };\n        request.onsuccess = function (event) {\n            resolve(event.target.result);\n        };\n        request.onerror = function (event) {\n            reject(event.target.error);\n        };\n    });\n}\n\nfunction idbSet(key, value) {\n    return openDB().then(db => {\n        return new Promise((resolve, reject) => {\n            const tx = db.transaction('grids', 'readwrite');\n            const store = tx.objectStore('grids');\n            const req = store.put(value, key);\n            req.onsuccess = () => resolve();\n            req.onerror = (e) => reject(e);\n        });\n    });\n}\n\nfunction idbGet(key) {\n    return openDB().then(db => {\n        return new Promise((resolve, reject) => {\n            const tx = db.transaction('grids', 'readonly');\n            const store = tx.objectStore('grids');\n            const req = store.get(key);\n            req.onsuccess = () => resolve(req.result);\n            req.onerror = (e) => reject(e);\n        });\n    });\n}\n\nasync function loadAndSave() {\n\n    let grids_to_save = game.get_grids_to_save();\n    for (const grid_index of grids_to_save) {\n        console.log(\"saving (dropping) grid: \" + grid_index_name(grid_index));\n        const grid = game.save_grid(grid_index);\n        if (grid) {\n            // save to IndexedDB\n            await idbSet(`grid_${grid_index_name(grid_index)}`, grid);\n        }\n    }\n\n    // Load grids from IndexedDB\n    let grids_to_load = game.get_grids_to_load();\n    for (const grid_index of grids_to_load) {\n        console.log(\"loading grid: \" + grid_index_name(grid_index));\n        const grid = await idbGet(`grid_${grid_index_name(grid_index)}`);\n        if (grid) {\n            game.load_grid(grid_index, grid);\n        } else {\n            game.generate_grid(grid_index);\n        }\n    }\n}\n\nconst renderLoop = () => {\n\n    game.tick();\n\n    drawPixels();\n\n    let stats = game.stats();\n\n    ticks.textContent = stats.ticks();\n    cells_count.textContent = stats.cells_count();\n    collisions_count.textContent = (stats.collisions_count() / stats.ticks()) | 0;\n    collision_pairs_tested.textContent = (stats.collision_pairs_tested() / stats.ticks()) | 0;\n\n    requestAnimationFrame(renderLoop);\n\n};\n\nconst getIndex = (row, column) => {\n    return row * width + column;\n};\n\nconst drawPixels = () => {\n    const pixelsPtr = game.pixels();\n    const pixels = new Uint32Array(rockies_rockies_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.memory.buffer, pixelsPtr, width * height);\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            const idx = getIndex(row, col);\n            ctx.beginPath();\n\n            let val = pixels[idx];\n            ctx.fillStyle = \"#\" + val.toString(16).padStart(6, \"0\");\n            //console.log(\"[%d,%d] = %s = %s\", row, col, pixels[idx].toString(16), ctx.fillStyle);\n\n            ctx.fillRect(\n                col * CELL_SIZE + 1,\n                row * CELL_SIZE + 1,\n                CELL_SIZE,\n                CELL_SIZE\n            );\n\n            ctx.stroke();\n        }\n    }\n\n};\n\n\nfunction resave() {\n    loadAndSave().then(() => {\n        setTimeout(resave, 5000);\n    });\n}\nresave();\nrenderLoop();\n\n\ncanvas.onmousemove = (e) => {\n    if (e.buttons > 0) {\n        game.click(e.offsetX / (CELL_SIZE + 1), e.offsetY / (CELL_SIZE + 1));\n    }\n};\n\ncanvas.onclick = (e) => {\n    game.click(e.offsetX / (CELL_SIZE + 1), e.offsetY / (CELL_SIZE + 1));\n};\n\ncanvas.addEventListener('blur', function (event) {\n    game.unfocus();\n});\n\nwindow.addEventListener('blur', function (event) {\n    game.unfocus();\n});\n\nlet is_shift_down = () => {\n    return dig_checkbox.checked;\n\n};\n\n// Helper function to find buttons by key\nconst findButtonsByKey = (key) => {\n    return Array.from(document.querySelectorAll('.move-button, .move-button-checkbox')).filter(el => {\n        const keys = (el.dataset.keys || '').split(',');\n        return keys.includes(key.toLowerCase());\n    });\n};\n\n// Helper functions to activate/deactivate buttons\nconst activateButton = (button) => {\n    if (button.classList.contains('move-button-checkbox')) {\n        if (!button.dataset.keys) return; // Skip buttons without key mappings\n        const keys = button.dataset.keys.split(',');\n        keys.forEach(key => {\n            if (pressedKeys.has(key)) {\n                button.checked = true;\n            }\n        });\n        // Trigger the change event so handlers are notified\n        button.dispatchEvent(new Event('change'));\n    } else {\n        button.classList.add('active');\n    }\n};\n\nconst deactivateButton = (button) => {\n    if (button.classList.contains('move-button-checkbox')) {\n        if (!button.dataset.keys) return; // Skip buttons without key mappings\n        const keys = button.dataset.keys.split(',');\n        keys.forEach(key => {\n            if (!pressedKeys.has(key)) {\n                button.checked = false;\n            }\n        });\n        // Trigger the change event so handlers are notified\n        button.dispatchEvent(new Event('change'));\n    } else {\n        button.classList.remove('active');\n    }\n};\n\n// Track currently pressed keys\nconst pressedKeys = new Set();\nlet shiftToggled = false;\n\n// Helper function to normalize key names\nconst normalizeKey = (key) => {\n    key = key.toLowerCase();\n    switch (key) {\n        case 'arrowup': return 'w';\n        case 'arrowdown': return 's';\n        case 'arrowleft': return 'a';\n        case 'arrowright': return 'd';\n        case ' ': return ' ';\n    }\n    return key;\n};\n\nconst findButtonElements = () => {\n    return Array.from(document.querySelectorAll('.move-button, .move-button-checkbox'));\n};\n\n// Update all button states based on currently pressed keys\nconst updateAllButtonStates = () => {\n    const elems = findButtonElements();\n\n    elems.filter(el => {\n        const buttonKeys = (el.dataset.keys || '').split(',').map(k => normalizeKey(k));\n        // For combination buttons (e.g. w+a)\n        if (buttonKeys.every(key => pressedKeys.has(key))) {\n            activateButton(el);\n        } else {\n            deactivateButton(el);\n        }\n    });\n};\n\n// Handle keyboard events\ndocument.onkeydown = (e) => {\n    const key = normalizeKey(e.key);\n    pressedKeys.add(key);\n    touches.textContent = key;\n    game.key_down(key);\n    updateAllButtonStates();\n};\n\ndocument.onkeyup = (e) => {\n    const key = normalizeKey(e.key);\n    pressedKeys.delete(key);\n    touches.textContent = key;\n    game.key_up(key);\n    updateAllButtonStates();\n};\n\n// Clear pressed keys when window loses focus\nwindow.onblur = () => {\n    pressedKeys.clear();\n    updateAllButtonStates();\n};\n\n// Setup control buttons\nconst setupControlButtons = () => {\n    // Special handling for shift checkbox\n    const toggleButtons = document.querySelectorAll('.move-button-checkbox');\n    toggleButtons.forEach(checkbox => {\n        if (!checkbox.dataset.keys) return; // Skip buttons without key mappings\n        const keys = checkbox.dataset.keys.split(',');\n        if (keys.includes('shift')) {\n            const handleChange = () => {\n                if (checkbox.checked) {\n                    pressedKeys.add('shift');\n                    game.key_down('shift');\n                } else {\n                    pressedKeys.delete('shift');\n                    game.key_up('shift');\n                }\n            };\n\n            checkbox.addEventListener('change', handleChange);\n            return; // Skip regular event binding for shift button\n        }\n    });\n\n    const buttons = document.querySelectorAll('.move-button');\n\n    buttons.forEach(button => {\n        if (!button.dataset.keys) return; // Skip buttons without key mappings\n        const keys = button.dataset.keys.split(',');\n\n        console.log(\"Button: \", button, \"Keys: \", keys);\n        const pressKeys = () => keys.forEach(key => game.key_down(key));\n        const releaseKeys = () => keys.forEach(key => game.key_up(key));\n\n        // Mouse events\n        button.addEventListener('mousedown', pressKeys);\n        button.addEventListener('mouseup', releaseKeys);\n        button.addEventListener('mouseleave', releaseKeys);\n\n        // Touch events\n        button.addEventListener('touchstart', (e) => {\n            e.preventDefault(); // Prevent double-firing on mobile\n            pressKeys();\n        });\n        button.addEventListener('touchend', (e) => {\n            e.preventDefault();\n            releaseKeys();\n        });\n        button.addEventListener('touchcancel', (e) => {\n            e.preventDefault();\n            releaseKeys();\n        });\n\n        // Blur event (when button loses focus)\n        button.addEventListener('blur', releaseKeys);\n    });\n\n\n};\n\n// Initialize controls\nsetupControlButtons();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/./index.js?");

/***/ })

}]);